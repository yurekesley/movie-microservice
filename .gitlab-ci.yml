image: maven:3.6.0-jdk-8-alpine

variables:
  MAVEN_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -DdependencyLocationsEnabled=false -Dmaven.repo.local=.m2/repository"
  MVN_OPTS: "-s .m2/settings.xml --batch-mode -DskipTests -DskipITs"
  MVN_OPTS_SONAR: "-s .m2/settings.xml --batch-mode -DskipTests -DskipITs "
  MVN_OPTS_BUILD: "-T 4 -s .m2/settings.xml --batch-mode -DskipTests -DskipITs "
  DOCKER_HOST: $ENV_DOCKER_HOST
  GIT_PROJECT_PATH: "git@${GITLAB_URL}:${CI_PROJECT_PATH}.git"
  GIT_PROJECT_PATH_SSH: "ssh://git@${GITLAB_URL}/${CI_PROJECT_PATH}"

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .m2/repository/

stages:
  - quality
  - version-promotion
  - deploy

##############################################
##                 QUALITY                  ##
##############################################

test:
  stage: quality
  only:
    - merge_requests
    - web
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[maven-scm\]/    
  script:
    - mvn $MVN_OPTS test

sonar-preview:
  stage: quality
  only:
    - merge_requests
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[maven-scm\]/  
  before_script:
    - REVISION_UNSTABLE=${CI_COMMIT_REF_SLUG}+sha.${CI_COMMIT_SHA:0:8}
    - 'which ssh-agent || ( apk update -y && apk add openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan -H ${GITLAB_URL} >> ~/.ssh/known_hosts
    - apk add --no-cache git
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
  script:
    - git checkout origin/master
    - git merge $CI_COMMIT_SHA --no-commit --no-ff
    - mvn $MVN_OPTS_SONAR verify sonar:sonar -Drevision=$REVISION_UNSTABLE -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.gitlab.project_id=$CI_PROJECT_PATH -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
   
sonar-publish:
  stage: quality
  only:
    refs:
      - master
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[maven-scm\]/  
  before_script:
    - REVISION_STABLE=${CI_COMMIT_TAG}
  script:
    - mvn $MVN_OPTS_SONAR verify sonar:sonar -Drevision=$REVISION_STABLE -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.gitlab.project_id=$CI_PROJECT_PATH -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.scm.disabled=true

##############################################
##                PROMOTION                 ##
##############################################

version-promotion:
  stage: version-promotion
  only:
    - web
  when: manual
  before_script:
    - 'which ssh-agent || ( apk update -y && apk add openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - ssh-keyscan -H ${GITLAB_URL} >> ~/.ssh/known_hosts
    - apk add --no-cache git
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"    
    - git remote update
    - git fetch
    - (if [ "$CI_COMMIT_REF_NAME" != "master" ]; then (git checkout --track origin/$CI_COMMIT_REF_NAME); else (git checkout $CI_COMMIT_REF_NAME); exit 0; fi);
  script:
    - mvn $MVN_OPTS_BUILD versions:set -DnewVersion=${versao}
    - mvn $MVN_OPTS_BUILD scm:add -Dincludes=**/pom.xml
    - mvn $MVN_OPTS_BUILD -Dmessage="[maven-scm] ${versao}" scm:checkin
    - mvn $MVN_OPTS_BUILD -Dtag="${versao}" scm:tag

##############################################
##                 DEPLOY                   ##
##############################################


snapshot:
  stage: deploy
  except:
    - master
  only:
    - web
  when: manual
  script:
    - mvn $MVN_OPTS_BUILD versions:set -DnewVersion=${versao}-SNAPSHOT
    - mvn $MVN_OPTS_BUILD -Ddocker.repository=${DOCKER_DEPLOY_REPO} deploy docker:build docker:push

deploy:
  stage: deploy
  only:
    - tags
  script:
    - mvn $MVN_OPTS_BUILD versions:set -DnewVersion=${CI_COMMIT_TAG}
    - mvn $MVN_OPTS_BUILD -Ddocker.repository=${DOCKER_DEPLOY_REPO} deploy docker:build docker:push
